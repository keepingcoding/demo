spring.application.name=demo

################################### DataSource ######################################
#DataSource
#boot.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8
#boot.datasource.username=root
#boot.datasource.password=toor
#boot.datasource.driver-class-name=com.mysql.jdbc.Driver
#
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/batch?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&verifyServerCertificate=false&serverTimezone=GMT
spring.datasource.druid.username=root
spring.datasource.druid.password=root
#boot.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver


################################### boot batch ######################################
### 是否初始化spring batch的数据表
## 三个值，always为始终执行初始化，embedded只初始化内存数据库（默认值）,如h2等，never为不执行初始化
spring.batch.initialize-schema=ALWAYS
### 是否自动执行job，默认true。或者设置为true配合spring.batch.job.names运行指定的job
spring.batch.job.enabled=false
### springboot2加入JobRegistryBeanPostProcessor后需要开启如下配置
spring.main.allow-bean-definition-overriding=true


app.id=demo
apollo.bootstrap.enabled=true
# will inject 'application', 'FX.apollo' and 'application.yml' namespaces in bootstrap phase
apollo.bootstrap.namespaces=application,FX.apollo,application.yml


################################### SpringMail ########################################
### SpringMail
spring.mail.host=smtp.163.com
spring.mail.username=xxx@163.com
spring.mail.password=xxx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.protocol=smtp
spring.mail.default-encoding=UTF-8


################################### Hibernate #########################################
#### Hibernate
#boot.jpa.database = MYSQL
#boot.jpa.show-sql = true
## Hibernate ddl auto (create, create-drop, update)
#boot.jpa.hibernate.ddl-auto = update
##boot.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
##boot.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#boot.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
#boot.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect


################################### RabbitMQ #########################################
### RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#boot.rabbitmq.virtual-host=/test


##################################### web #############################################
server.servlet.context-path=/
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/


#################################### thymeleaf ########################################
#thymeleaf start
#默认严格检查
spring.thymeleaf.mode=HTML5
#非严格检查
#boot.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#boot.thymeleaf.prefix=classpath:/templates/
## Suffix that gets appended to view names when building a URL.
#boot.thymeleaf.suffix=.html
#thymeleaf end

####################################### 文件上传 #####################################
### upload start
# 单个文件上传最大值
spring.servlet.multipart.max-file-size=5MB
# 总文件上传最大值
spring.servlet.multipart.max-request-size=5MB
# multipart上传文件
spring.servlet.multipart.enabled=true
# 上传文件的临时目录
#spring.servlet.multipart.location=
# multipart上传文件时懒加载
#spring.servlet.multipart.resolve-lazily=false
### upload end